{"bgColorIndex":0,"textColorIndex":1,"note":"-- Case Study 1: Danny's Diner\n-- Source: https:\/\/8weeksqlchallenge.com\/case-study-1\/\n\n-- 1. What is the total amount each customer spent at the restaurant?\nSELECT \n    s.customer_id, \n    SUM(m.price) AS total_amount_spent\nFROM sales s\nJOIN menu m ON m.product_id = s.product_id\nGROUP BY s.customer_id;\n\n-- 2. How many days has each customer visited the restaurant?\n-- (Each unique order date counts as a visit)\nSELECT \n    customer_id, \n    COUNT(DISTINCT order_date) AS number_of_visits\nFROM sales\nGROUP BY customer_id;\n\n-- 3. What was the first item from the menu purchased by each customer?\nSELECT \n    customer_id, \n    product_name, \n    order_date\nFROM (\n    SELECT \n        s.customer_id, \n        s.order_date, \n        m.product_name,\n        ROW_NUMBER() OVER (\n            PARTITION BY s.customer_id \n            ORDER BY s.order_date\n        ) AS rn\n    FROM sales s\n    JOIN menu m ON s.product_id = m.product_id\n) first_order\nWHERE rn = 1;\n\n-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?\nSELECT \n    m.product_name, \n    COUNT(*) AS order_count\nFROM sales s\nJOIN menu m ON s.product_id = m.product_id\nGROUP BY m.product_name\nORDER BY order_count DESC\nLIMIT 1;\n\n-- 5. Which item was the most popular for each customer?\nSELECT \n    customer_id, \n    product_name, \n    order_count\nFROM (\n    SELECT \n        s.customer_id, \n        m.product_name,\n        COUNT(*) AS order_count,\n        ROW_NUMBER() OVER (\n            PARTITION BY s.customer_id \n            ORDER BY COUNT(*) DESC\n        ) AS rn\n    FROM sales s\n    JOIN menu m ON s.product_id = m.product_id\n    GROUP BY s.customer_id, m.product_name\n) ranked\nWHERE rn = 1;\n\n-- 6. Which item was purchased first by the customer after they became a member?\n-- (We get the earliest order after join_date)\nSELECT \n    s.customer_id, \n    MIN(s.order_date) AS first_post_member_order\nFROM sales s\nJOIN members m ON s.customer_id = m.customer_id\nWHERE s.order_date > m.join_date\nGROUP BY s.customer_id;\n\n-- 7. Which item was purchased just before the customer became a member?\n-- (We get the latest order before join_date)\nSELECT \n    s.customer_id, \n    MAX(s.order_date) AS last_pre_member_order\nFROM sales s\nJOIN members m ON s.customer_id = m.customer_id\nWHERE s.order_date < m.join_date\nGROUP BY s.customer_id;\n\n-- 8. What is the total items and amount spent for each member before they became a member?\nSELECT \n    s.customer_id, \n    COUNT(*) AS total_items, \n    SUM(m.price) AS total_amount\nFROM sales s\nJOIN menu m ON s.product_id = m.product_id\nJOIN members mb ON s.customer_id = mb.customer_id\nWHERE s.order_date < mb.join_date\nGROUP BY s.customer_id;\n\n-- 9. If each $1 spent = 10 points, and sushi earns 2x points â€” how many points would each customer have?\nSELECT \n    s.customer_id,\n    SUM(\n        CASE \n            WHEN m.product_name = 'sushi' THEN m.price * 20\n            ELSE m.price * 10\n        END\n    ) AS total_points\nFROM sales s\nJOIN menu m ON s.product_id = m.product_id\nGROUP BY s.customer_id;\n\n-- 10. In the first week after a customer joins (incl. join date), they earn 2x points on all items.\n-- How many points do customer A and B have at the end of January?\nSELECT \n    s.customer_id,\n    SUM(\n        CASE \n            WHEN s.order_date BETWEEN mbr.join_date AND mbr.join_date + INTERVAL '6 days' THEN m.price * 20\n            WHEN m.product_name = 'sushi' THEN m.price * 20\n            ELSE m.price * 10\n        END\n    ) AS total_points\nFROM sales s\nJOIN menu m ON s.product_id = m.product_id\nJOIN members mbr ON s.customer_id = mbr.customer_id\nWHERE s.order_date <= '2021-01-31'\n  AND s.customer_id IN ('A', 'B')\nGROUP BY s.customer_id;\n"}